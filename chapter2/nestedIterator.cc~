/*
 * =====================================================================================
 *
 *       Filename:  nestedIterator.cc
 *
 *    Description:  
 *
 *        Version:  1.0
 *        Created:  05/17/16 05:04:39
 *       Revision:  none
 *       Compiler:  gcc
 *
 *         Author:  YOUR NAME (), 
 *   Organization:  
 *
 * =====================================================================================
 */
class NestedIterator {
	private:
		    stack<NestedInteger> num_stack;
		        int ret;
	public:
			    NestedIterator(vector<NestedInteger> &nestedList) {
				            auto iter1 = nestedList.rbegin();
					            auto iter2 = nestedList.rend();
						            while(iter1 != iter2) {
								                num_stack.push(*iter1);
										            ++ iter1;
											            }
							        }

			        int next() {
					        return ret;
						    }

				    bool hasNext() {
					            while(! num_stack.empty()) {
							                NestedInteger top = num_stack.top();
									            if (top.isInteger()) {
											                    ret = top.getInteger();
													                    num_stack.pop();
															                    return true;
																	                    break;
																			                } else {
																						                num_stack.pop();
																								                vector<NestedInteger> list = top.getList();
																										                size_t size = list.size();
																												                auto iter1 = list.rbegin();
																														                auto iter2 = list.rend();
																																                while(iter1 != iter2) {
																																			                    num_stack.push(*iter1);
																																					                        ++ iter1;
																																								                }
																																		            }
										            }
						            return false;
							        }
};
