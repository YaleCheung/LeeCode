#include <iostream>
#include <stack>
using std::stack;
struct TreeNode {
    int val;
    TreeNode* left;
    TreeNode* right;
    TreeNode(int x) :
        val(x), left(NULL), right(NULL) {}
};

class Solution {
public:
    bool hasPathSum(TreeNode* root, int sum) {
        // binary tree post-order traverse;
        if(root == NULL)
        if(sum == root->val) 
            return true;
        stack<TreeNode *> s;
        s.push(root);
        s_sum = root->val;
        TreeNode* p = root;
	TreeNode* last_visit = NULL;

        while(! s.empty()) {
            while(NULL != p->left) {
                s.push(p->left);
                s_sum += p->left->val;
                p = p->left;
            }
            if ((p->right != NULL) && 
               (last_visit != p->right) && 
	       (! s.empty())) 
                p = p->right; 
            else if ((! s.empty()) && 
                     ((p->right == NULL) && 
                      (p->left == NULL) ||
                      (p->right == last_visit))) {
                if (p->right == NULL && p->left == NULL && s_sum == sum)
                    return true;
                last_visit = p;
                s.pop();
                p = s.top();
            }
        }
	return false;
    }
};
